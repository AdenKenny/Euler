import math

"""
If we list all the natural numbers below 10 that are multiples
of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
"""


def question_1() -> int:
	list_numbs = []
	
	for i in range(1, 1000):
		if i % 3 == 0 and i % 5 == 0:
			list_numbs.append(i)
		elif i % 3 == 0:
			list_numbs.append(i)
		elif i % 5 == 0:
			list_numbs.append(i)
	
	return sum(list_numbs)
	
"""
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""


def question_2() -> int:
	last = 1
	last_2 = 1
	
	sums = []
	
	while last < 4000000:
		fib = last + last_2
		
		last = last_2
		last_2 = fib
		
		if fib % 2 == 0:
			sums.append(fib)
	
	return sum(sums)

"""
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
"""


def question_3():
	target = 600851475143
	upper_bound = int(math.sqrt(target))
	
	highest = 0
	
	for i in range(1, upper_bound):
		if target % i == 0:
			if is_prime(i):
				highest = i
	
	return highest


def is_prime(n: int) -> bool:
	for i in range(2, int(n ** 0.5) + 1):
		if n % i == 0:
			return False
	
	return True


def main():
	print(question_3())

main()